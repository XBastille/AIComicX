

Design an E-Learning Platforms 
Objective: 
The objective is to develop a Web2-based e-learning system tailored to the specific needs of a 
college environment. This system will facilitate seamless communication between students and 
faculty, streamline course management, and enhance the overall learning experience. It aims to 
provide a centralized platform for lecture delivery, assignment submission, grading, and 
real-time student progress tracking. 
 
Key Features: 
Admin Portal: 
● User Management: Admins can register and manage faculty and student accounts. 
 
● Course Management: Ability to create, edit, and delete courses offered in the platform. 
 
● Report Generation: View reports on student performance, course progress, and faculty 
activities. 
 
● System Monitoring: Track platform usage, handle support requests, and manage 
platform-wide settings. 
 
● Announcements: Broadcast notifications or updates to students and faculty. 
 
Faculty Portal: 
● Course Creation & Management: Faculty can create and update course content, 
including lectures, PDFs, and video lessons. 
 
● Assignment & Quiz Management: Upload assignments, set deadlines, and create 
quizzes with auto-grading options. 
 
● Student Performance Tracking: View student progress, grade assignments, and 
provide feedback. 
 

● Notifications & Reminders: Send important announcements regarding classes, 
assignments, and exams. 
 
Student Portal: 
● User Registration & Authentication: Secure login using college credentials. 
 
● Course Enrolment: Browse available courses and enroll in desired subjects. 
 
● Lecture Access: View recorded lectures, live classes, and course materials of the 
enrolled courses. 
 
● Assignment Submission: Submit assignments online before deadlines and track 
pending submissions. 
 
● Quiz & Exam Participation: Take online quizzes, view results, and track academic 
progress. 
 
● Grades & Feedback: Access grades, faculty feedback, and performance analytics. 
 
● Push Notifications: Get alerts for upcoming classes, due assignments, and 
announcements. 
 
 
Bonus Features: 
● AI-based Course Recommendations: Suggest courses based on student interests and 
past enrollments. 
 
● Gamification & Leaderboard: Introduce achievement badges and rankings to 
encourage participation. 
 
● Offline Access: Allow students to download course materials for offline study. 
 
● Student-Faculty Chat: Enable direct communication between students and faculty for 
academic support. 
 
● Plagiarism Detection: Integrate tools to check for plagiarism in assignments. 
 
 

Submission Requirements: 
Participants are required to submit the following: 
● Deployment Link: A live URL to the deployed platform for evaluation. 
 
● Video Demonstration: A 5-minute (at max) video  showcasing key platform features 
and functionality. 
 
● Presentation Slides: (Max 5 slides) covering the idea, tech stack, and implementation 
details. 
 
● GitHub Repository Link: A well-organized GitHub repository with documentation. 
 
● Project Documentation: Including system architecture, third-party API integrations, and 
local setup instructions. 
 
 
 
 
General Rules: 
● Only one team member has to register; not all participants have to register individually. 
● A team can submit only one entry for the Challenge. Participation in the challenge is subject to a 
“per-team” basis, i.e., you are not allowed to be in multiple teams. 
● Use of third-party libraries, APIs, and frameworks is allowed but must be disclosed. 
● AI-generated code/assets are permitted only if disclosed and properly credited. 
● Original work only—projects must be built from scratch during the hackathon. 
● Pre-existing boilerplate code (like UI templates) can be used but must be disclosed. 
● Offensive, illegal, or unethical content is strictly not allowed. 
● Submissions must be functional—non-working prototypes will not be considered. 
● Regular commits showcasing various stages of development should be present in the 
submitted GitHub repository. No commits should be made before the start of the 
hackathon. 

● The coding period is for 24 hours and starts from 10:00 AM, April 04, 2024 and ends on 
April 05, 2024. 
● No commits should be made after the submission of form. 
 
 
 
 
 
Judging Criteria : 
 
● Implementation of features and adherence to the theme - 40% 
● User Experience, Design and Creativity - (15 + 10 + 5)% 
● Code Quality, Documentation & Maintainability - (10 + 5 + 5)% 
● Video Presentation - 5% 
● Time of event remaining - 5% 
 
 
 
 
 
Penalty : 
 
● Late Submission: Deduction of 5% from total marks for every 15 minutes late, capped 
at 50%. After that, the team will be disqualified. 
. 
● Plagiarism: If found, the team will be subjected to disqualification or marks deduction. 
The exact degree of penalty will be decided by the judging committee. 
 
 
 
 
 
 
  "May your code be bug-free and your breakthroughs 
plentiful. Happy coding!" 